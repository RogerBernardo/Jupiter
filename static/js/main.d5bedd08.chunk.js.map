{"version":3,"sources":["assets/owl.svg","components/Content/styles.js","components/Content/index.js","pages/Home/styles.js","pages/Home/index.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","Head","header","Description","p","GroupLinks","section","Card","article","Content","category","src","owl","alt","className","categoryLink","data","map","dataItem","index","key","links","href","url","title","target","rel","description","ExitToApp","forEach","element","position","item","renderLinks","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","backgroundColor","content","flexGrow","padding","Home","props","window","classes","useTheme","useState","mobileOpen","setMobileOpen","showCategory","setShowCategory","handleDrawerToggle","owlIcon","id","List","ListItem","button","onClick","link","container","undefined","document","body","AppBar","Toolbar","IconButton","color","aria-label","edge","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Boolean","location","hostname","match","ReactDOM","render","Fragment","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d5bedd08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/owl.b8f2b960.svg\";","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  margin: 0 auto;    \r\n`;\r\n\r\nexport const Head = styled.header`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  .brand {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .brand h1 {\r\n    font-size: 3rem;    \r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  margin-top: 2rem;\r\n  margin-bottom: 2rem;\r\n  line-height: 1.6rem;\r\n`;\r\n\r\nexport const GroupLinks = styled.section`\r\n  width: 100%;\r\n  margin: 2.4rem 0; \r\n\r\n  & > h2{\r\n    font-size: 2rem;\r\n    margin-bottom: 2rem;\r\n    color: var(--color-secundary);\r\n  }  \r\n`;\r\n\r\nexport const Card = styled.article`\r\n  width: 100%; \r\n  margin-top: 12px;\r\n  margin-bottom: 8px; \r\n\r\n  .link {    \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: var(--color-black-light);\r\n    border-radius: 4px;\r\n    padding: 1rem 0.8rem;\r\n    border: 2px solid transparent;\r\n  }\r\n\r\n  .content p {\r\n    font-size: 0.9rem;\r\n    margin-top: 0.5rem;\r\n  }  \r\n\r\n  .link svg {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    margin-left: 2rem;\r\n  }\r\n\r\n  .link {\r\n    transition: 0.4s ease-in all;\r\n  }\r\n\r\n  .link:hover {\r\n    border-color: var(--color-secundary);\r\n  }\r\n`;","import React from 'react';\r\nimport { data } from '../../data/data.json';\r\nimport owl from '../../assets/owl.svg';\r\nimport { ExitToApp } from '@material-ui/icons';\r\n\r\nimport {\r\n  Head,\r\n  Container,\r\n  Description,\r\n  GroupLinks,\r\n  Card\r\n} from './styles';\r\n\r\nexport default function Content({ category }) {\r\n\r\n  function renderLinks(categoryLink) {\r\n    if(categoryLink === 'Tudo') {      \r\n      return (\r\n        data.map((dataItem, index) => {\r\n          return (\r\n            <GroupLinks key={ dataItem.category}>\r\n              <h2>{ dataItem.category }</h2>\r\n              {\r\n                dataItem.links.map((links, index) => {\r\n                  return (\r\n                    <Card key={ index } >\r\n                      <a href={ links.url } alt={ links.title } target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\r\n                        <div className=\"content\">\r\n                          <h3>{ links.title }</h3>\r\n                          <p>{ links.description }</p>\r\n                        </div>\r\n                        <ExitToApp />\r\n                      </a>\r\n                    </Card>\r\n                  );\r\n                })\r\n              }\r\n            </GroupLinks>\r\n          );\r\n        })\r\n      );\r\n    }\r\n\r\n    else {\r\n      let position;\r\n\r\n      data.forEach((element, index) => {\r\n        if(element.category === category) {\r\n          position = index;\r\n          return;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <GroupLinks>\r\n          <h2>{ data[position].category }</h2>\r\n          {\r\n            data[position].links.map((item, index) => {\r\n              return (\r\n                <Card key={ index } >\r\n                  <a href={ item.url } alt={ item.title } target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\r\n                    <div className=\"content\">\r\n                      <h3>{ item.title }</h3>\r\n                      <p>{ item.description }</p>\r\n                    </div>\r\n                    <ExitToApp />\r\n                  </a>\r\n                </Card>\r\n              );\r\n            })\r\n          }\r\n        </GroupLinks>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Head>\r\n        <img src={ owl } alt=\"Coruja\" />\r\n        <div className=\"brand\">\r\n          <h1>Atena</h1>\r\n          <p>Compilado de ferramentas para desenvolvedores e designers.</p>\r\n        </div>\r\n      </Head>\r\n\r\n      <Description>\r\n        Constantemente estamos em busca de ferramentas para agilizar nosso trabalho ou recursos de design para construirmos nossas melhores interfaces web ou mobile, e para isso que Atena existe, agregar conhecimento à aqueles que o buscam. Este projeto está hospedado no github e para contribuir basta enviar uma pull request conforme o padrão que constará no README do repositório.\r\n        Faça bom proveito do material aqui presente. : )\r\n      </Description>\r\n\r\n      {\r\n        renderLinks(category)\r\n      }\r\n     \r\n    </Container>\r\n  );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 300;\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${ drawerWidth }px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    backgroundColor: \"#212121\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#212121\"\r\n  },\r\n  content: {   \r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Drawer,\r\n  Hidden,\r\n  IconButton,\r\n  List,\r\n  Toolbar,\r\n  ListItem\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport Content from '../../components/Content';\r\nimport owlIcon from '../../assets/owl.svg';\r\nimport { data } from '../../data/data.json';\r\nimport { useStyles } from './styles';\r\n\r\nfunction Home(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const [showCategory, setShowCategory] = useState('Tudo');\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  \r\n  const drawer = (\r\n    <div>\r\n      <img src={ owlIcon } alt=\"Atena\" id=\"logo-drawer\" />\r\n      <List>\r\n        <ListItem button onClick={ () => setShowCategory('Tudo') }>\r\n          Tudo\r\n        </ListItem>\r\n        {\r\n          data.map((link, index) => {\r\n            return (\r\n              <ListItem button key={ index } onClick={ () => setShowCategory(link.category) }>\r\n                {\r\n                  link.category\r\n                }\r\n              </ListItem>\r\n            );\r\n          })\r\n        }\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={ classes.root }>\r\n\r\n      <AppBar position=\"fixed\" className={ classes.appBar }>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={ handleDrawerToggle }\r\n            className={ classes.menuButton }\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <h1>Atena</h1>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <nav className={ classes.drawer } aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */ }\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={ container }\r\n            variant=\"temporary\"\r\n            anchor={ theme.direction === 'rtl' ? 'right' : 'left' }\r\n            open={ mobileOpen }\r\n            onClose={ handleDrawerToggle }\r\n            classes={ {\r\n              paper: classes.drawerPaper,\r\n            } }\r\n            ModalProps={ {\r\n              keepMounted: true, // Better open performance on mobile.\r\n            } }\r\n          >\r\n            { drawer }\r\n          </Drawer>\r\n        </Hidden>\r\n\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={ {\r\n              paper: classes.drawerPaper,\r\n            } }\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            { drawer }\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n\r\n      <main className={ classes.content }>\r\n        <div className={ classes.toolbar } />\r\n\r\n        <Content category={ showCategory } />\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './pages/Home';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.Fragment>\n    <Home />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}